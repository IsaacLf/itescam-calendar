{"version":3,"sources":["calendar.ts"],"names":[],"mappings":";AAAA,IAAU,OAAO,CAyrBhB;AAzrBD,WAAU,OAAO;IAEf,IAAM,WAAW,GAAkB;QACjC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;QACvD,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;QACzD,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;QACtD,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;QACtD,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;QACrD,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;QACtD,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;QACtD,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;QACvD,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;QAC3D,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;QACzD,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE;QAC3D,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE;KAC7D,CAAC;IAEW,iBAAS,GAAG;QACvB,EAAE,IAAI,EAAE,SAAS,EAAE;QACnB,EAAE,IAAI,EAAE,OAAO,EAAE;QACjB,EAAE,IAAI,EAAE,QAAQ,EAAE;QAClB,EAAE,IAAI,EAAE,WAAW,EAAE;QACrB,EAAE,IAAI,EAAE,QAAQ,EAAE;QAClB,EAAE,IAAI,EAAE,SAAS,EAAE;QACnB,EAAE,IAAI,EAAE,QAAQ,EAAE;KACnB,CAAC;IAsDF;QAIE,eAAY,GAAW,EAAE,KAAa,EAAE,IAAW;YACjD,IAAI,CAAC,GAAG,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAC9C,IAAI,CAAC,IAAI,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC9B,CAAC;QACD,8BAAc,GAAd,UAAe,KAAa,EAAE,IAAY;YACxC,IAAI,IAAI,GAAU,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;YAC3C,KAAkB,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW,EAAE;gBAA1B,IAAM,GAAG,oBAAA;gBACZ,IAAG,GAAG,CAAC,KAAK,KAAK,KAAK,EAAC;oBACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,IAAG,GAAG,CAAC,IAAI,KAAK,SAAS,IAAI,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC;wBAClD,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;qBAC9B;yBAAM;wBACL,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;qBAC5B;oBACD,IAAI,CAAC,IAAI,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;oBAC5B,OAAO,IAAI,CAAC;iBACb;aACF;YACD,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;QAClD,CAAC;QACM,gBAAU,GAAjB,UAAkB,IAAY;YAC/B,IAAI,QAAQ,GAAG,KAAK,CAAC;YACrB,QAAQ,GAAG,CAAC,IAAI,GAAC,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAC,GAAG,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAC,GAAG,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC,KAAK,CAAC;YACzF,OAAO,QAAQ,CAAC;QACf,CAAC;QACD,8BAAc,GAAd;YACE,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;QAC/D,CAAC;QACD,wBAAQ,GAAR;YACE,OAAU,IAAI,CAAC,GAAG,CAAC,KAAK,SAAI,IAAI,CAAC,KAAK,CAAC,KAAK,SAAI,IAAI,CAAC,IAAI,CAAC,KAAO,CAAC;QACpE,CAAC;QACH,YAAC;IAAD,CApCA,AAoCC,IAAA;IApCY,aAAK,QAoCjB,CAAA;IAkBD,SAAgB,UAAU,CAAC,IAAsB;QAC/C,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAG,OAAO,IAAI,KAAK,QAAQ,EAAC;YAC1B,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAClD;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IANe,kBAAU,aAMzB,CAAA;IAED,SAAS,gBAAgB,CAAC,IAAW;QACnC,IAAI,IAAI,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClF,IAAI,GAAG,GAAU;YACf,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;YACvB,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;YAC3B,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAC,CAAC,CAAC,CAAC,IAAI;YAC1C,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC;QACF,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,KAAK,CAAC,GAAG,GAAG;YACV,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK;YACrB,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;YACnE,KAAK,EAAE,GAAG;YACV,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC;QACF,2BAA2B;QAC3B,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;QAClB,KAAK,CAAC,IAAI,GAAG;YACX,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;SACvB,CAAA;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED;QAOE,kBAAY,SAAiB,EAAE,OAAe;YAC5C,IAAG,OAAO,SAAS,KAAK,WAAW,IAAI,OAAO,OAAO,KAAK,WAAW,EAAC;gBACpE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;gBACpD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;aACnB;iBAAM;gBACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;aAClC;QACH,CAAC;QACD,2BAA2B;QAC3B,+BAAY,GAAZ,UAAa,SAAgB,EAAE,OAAa;YAC1C,IAAI,KAAK,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC;YACxC,IAAI,GAAG,GAAG,gBAAgB,CAAC,OAAO,CAAC,CAAC;YACpC,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAE,GAAG,GAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;YAC9E,IAAI,MAAM,GAAW;gBACnB,SAAS,EAAE,KAAK;gBAChB,OAAO,EAAE,GAAG;gBACZ,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC;gBAChC,IAAI,EAAE,IAAI;aACX,CAAC;YACF,OAAO,MAAM,CAAC;QAChB,CAAC;QACD,8BAAW,GAAX;YACE,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAAC,CAAC;YAChC,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAAC,CAAC;YAC9B,IAAI,MAAM,GAAW;gBACnB,SAAS,EAAE,KAAK;gBAChB,OAAO,EAAE,GAAG;aACb,CAAC;YACF,OAAO,MAAM,CAAC;QAChB,CAAC;QACD,4BAAS,GAAT,UAAU,MAAc;YACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC;QACD;;;WAGG;QACH,4BAAS,GAAT,UAAU,MAAc;YACtB,IAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,EAAxB,CAAwB,CAAC;gBACpD,OAAO,KAAK,CAAC;YACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1B,OAAO,IAAI,CAAC;QACd,CAAC;QACD,kCAAe,GAAf,UAAgB,IAAY;YAC1B,IAAI,MAA0B,CAAC;YAC/B,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,IAAI,IAAI,EAAjB,CAAiB,CAAC,CAAA;YACrD,IAAG,MAAM,EAAC;gBACR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,OAAO,IAAI,CAAC;aACb;YACD,OAAO,KAAK,CAAC;QACf,CAAC;QACD,uBAAuB;QACvB,0BAA0B;QAC1B;;;;WAIG;QACH,iCAAc,GAAd,UAAe,QAAe,EAAE,UAAiB;YAC/C,IAAI,MAAM,GAAY,EAAE,CAAC;YACzB,IAAI,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,YAAY,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC;YACtF,IAAI,UAAU,GAAG,gBAAgB,CAAC,QAAQ,CAAC,EAAE,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YAC9E,MAAM,CAAC,IAAI,CAAC;gBACV,SAAS,EAAE,YAAY;gBACvB,OAAO,EAAE,UAAU;gBACnB,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,UAAU,CAAC;gBAC9C,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,GAAC,GAAG;aAC3B,CAAC,CAAC;YACH,MAAM,CAAC,IAAI,CAAC;gBACV,SAAS,EAAE,YAAY;gBACvB,OAAO,EAAE,UAAU;gBACnB,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,UAAU,CAAC;gBAC9C,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,GAAC,GAAG;aAC3B,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QAC9B,CAAC;QACD,uBAAuB;QACvB,2BAAQ,GAAR,UAAS,SAAgB,EAAE,OAAc;YACvC,IAAI,KAAK,GAAW,EAAE,CAAC;YACvB,IAAM,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;YACrE,IAAM,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;YAC1E,IAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAClE,IAAI,WAAW,GAAG,SAAS,CAAC;YAC5B,IAAI,KAAY,CAAC;YACjB,OAAM,WAAW,IAAI,OAAO,EAAC;gBAC3B,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;gBACvB,IAAG,WAAW,KAAK,OAAO,EAAC;oBACzB,KAAK,CAAC,IAAI,GAAG,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;oBACpC,KAAK,CAAC,IAAI,CAAC;wBACT,KAAK,EAAE,WAAW;wBAClB,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAG,WAAW,CAAC,SAAS,GAAC,CAAC,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC;qBAC7E,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAG,WAAW,KAAK,SAAS,EAAC;wBAC3B,KAAK,GAAG,WAAW,CAAC,UAAU,GAAC,CAAC,CAAC,CAAC;wBAClC,KAAK,CAAC,IAAI,GAAG,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;wBACpC,KAAK,CAAC,IAAI,CAAC;4BACT,KAAK,EAAE,WAAW;4BAClB,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,EAAG,QAAQ,EAAE,SAAS,CAAC;yBAC/D,CAAC,CAAC;qBACJ;yBAAM;wBACL,KAAK,CAAC,IAAI,GAAG,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;wBACpC,KAAK,CAAC,IAAI,CAAC;4BACT,KAAK,EAAE,WAAW;4BAClB,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;yBAC9B,CAAC,CAAC;qBACJ;iBACF;gBACD,WAAW,EAAE,CAAC;aACf;YACD,OAAO,KAAK,CAAC;QACf,CAAC;QACD,4BAAS,GAAT,UAAU,UAAiB,EAAE,QAAgB,EAAE,QAAiB,EAAE,MAAe;YAC/E,IAAI,MAAM,GAAY,EAAE,CAAC;YACzB,IAAI,YAAY,GAAG,UAAU,CAAC,KAAK,EAAE,UAAU,GAAG,EAAE,EAAE,MAAM,GAAG,IAAI,CAAC;YACpE,IAAI,UAAU,GAAG,CAAC,EAAE,QAAQ,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC;YACvD,IAAG,OAAO,QAAQ,KAAK,WAAW,EAAC;gBACjC,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC;aAC7B;YACD,IAAG,OAAO,UAAU,CAAC,IAAI,KAAK,WAAW,EAAC;gBACxC,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;aAChC;YACD,IAAI,YAAY,GAAG,YAAY,CAAC;YAChC,IAAI,KAAK,GAAU,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;YAAC,IAAI,IAAI,GAAU,EAAE,CAAC;YAClE,IAAI,KAAK,GAAW,EAAE,CAAC;YACvB,OAAM,YAAY,IAAI,UAAU,EAAC;gBAC/B,KAAK,GAAG,WAAW,CAAC,YAAY,GAAC,CAAC,CAAC,CAAC;gBACpC,KAAK,CAAC,IAAI,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;gBAC/B,IAAG,KAAK,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,EAAC;oBAClE,KAAK,CAAC,OAAO,EAAE,CAAC;iBACjB;gBACD,IAAG,YAAY,KAAK,YAAY,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAC;oBAClE,UAAU,GAAG,QAAQ,CAAC;oBACtB,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;iBAC1B;qBAAK,IAAG,YAAY,KAAK,UAAU,IAAI,OAAO,MAAM,KAAK,WAAW,EAAC;oBACpE,UAAU,GAAG,CAAC,CAAC;oBACf,QAAQ,GAAG,MAAM,CAAC;iBACnB;qBAAM;oBACL,UAAU,GAAG,CAAC,CAAC;oBACf,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;iBAC1B;gBACD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;gBACjD,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;gBACvC,+BAA+B;gBAC/B,MAAM,CAAC,IAAI,CAAC;oBACV,KAAK,EAAE,YAAY;oBACnB,OAAO,EAAE,KAAK,CAAC,OAAO;oBACtB,IAAI,EAAE,IAAI;oBACV,KAAK,EAAE,KAAK;oBACZ,IAAI,EAAE,WAAW,CAAC,YAAY,GAAC,CAAC,CAAC,CAAC,IAAI;oBACtC,IAAI,EAAE,KAAK,CAAC,IAAI;iBACjB,CAAC,CAAC;gBACH,YAAY,EAAE,CAAC;aAChB;YACD,OAAO,MAAM,CAAC;QAChB,CAAC;QACD,2BAAQ,GAAR,UAAS,IAAW;YAClB,IAAI,KAAK,GAAW,EAAE,EAAE,UAAU,GAAU,EAAE,CAAC;YAC/C,IAAI,OAAO,GAAG,CAAC,CAAC;YAAC,IAAI,OAAY,CAAC;YAClC,IAAG,OAAO,IAAI,KAAK,WAAW,EAAC;gBAC7B,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAE,CAAC,CAAC,CAAC;gBAC/B,KAAkB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAAnB,IAAM,GAAG,aAAA;oBACZ,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACrB,IAAG,GAAG,CAAC,IAAI,IAAI,QAAQ,IAAI,GAAG,KAAK,OAAO,EAAC;wBACzC,KAAK,CAAC,IAAI,CAAC;4BACT,KAAK,EAAE,OAAO;4BACd,IAAI,EAAE,UAAU;yBACjB,CAAC,CAAA;wBACF,OAAO,EAAE,CAAC;wBACV,UAAU,GAAG,EAAE,CAAC;qBACjB;iBACF;aACF;YACD,OAAO,KAAK,CAAC;QACf,CAAC;QACD,0BAAO,GAAP,UAAQ,KAAY,EAAE,QAAgB,EAAE,MAAc;YACpD,IAAI,IAAI,GAAU,EAAE,CAAC;YACrB,IAAI,GAAG,GAAU,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;YAC1C,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;YACxB,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;YAC5B,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACtB,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACtB,IAAI,UAAU,GAAG,QAAQ,CAAC;YAC1B,IAAI,IAAI,GAAG,CAAC,OAAO,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;YACzE,IAAI,IAAY,CAAC;YACjB,OAAM,UAAU,IAAI,MAAM,EAAC;gBACzB,IAAI,GAAG,QAAQ,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,KAAK,EAAE,IAAI,CAAE,CAAC;gBAC3D,IAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,UAAU;oBACjB,KAAK,EAAE,GAAG;oBACV,IAAI,EAAE,KAAK,CAAC,IAAI;oBAChB,IAAI,EAAE,IAAI;oBACV,IAAI,EAAE,CAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;oBACnE,KAAK,EAAE,EAAE;oBACT,MAAM,EAAE,EAAE;iBACX,CAAC,CAAC;gBACH,yEAAyE;gBACzE,UAAU,EAAE,CAAC;aACd;YACD,OAAO,IAAI,CAAC;QACd,CAAC;QACD;;;WAGG;QACH,sCAAmB,GAAnB,UAAoB,IAAW;YAC7B,IAAI,KAAK,GAAW,EAAE,EAAE,UAAU,GAAU,EAAE,CAAC;YAC/C,IAAI,OAAO,GAAG,CAAC,CAAC;YAChB,IAAI,QAAa,EAAE,OAAY,CAAC;YAChC,IAAG,OAAO,IAAI,KAAK,WAAW,EAAC;gBAC7B,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACnB,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAE,CAAC,CAAC,CAAC;gBAC/B,IAAG,QAAQ,CAAC,IAAI,IAAI,QAAA,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAC;oBACpC,KAAkB,UAAS,EAAT,cAAA,iBAAS,EAAT,uBAAS,EAAT,IAAS,EAAE;wBAAxB,IAAM,GAAG,kBAAA;wBACZ,IAAG,GAAG,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,EAAC;4BAC3B,MAAM;yBACP;wBACD,UAAU,CAAC,IAAI,CAAC;4BACd,KAAK,EAAE,CAAC;4BACR,IAAI,EAAE,GAAG,CAAC,IAAI;yBACf,CAAC,CAAC;qBACJ;iBACF;gBACD,KAAkB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;oBAAnB,IAAM,GAAG,aAAA;oBACZ,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACrB,IAAG,GAAG,CAAC,IAAI,IAAI,QAAQ,EAAC;wBACtB,KAAK,CAAC,IAAI,CAAC;4BACT,KAAK,EAAE,OAAO;4BACd,IAAI,EAAE,UAAU;yBACjB,CAAC,CAAA;wBACF,IAAG,GAAG,IAAI,OAAO;4BAAG,OAAO,EAAE,CAAC;wBAC9B,UAAU,GAAG,EAAE,CAAC;qBACjB;iBACF;gBACD,IAAG,OAAO,CAAC,IAAI,IAAI,QAAA,SAAS,CAAC,QAAA,SAAS,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,IAAI,EAAC;oBACpD,KAAI,IAAI,CAAC,GAAG,QAAA,SAAS,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,EAAN,CAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAA,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;wBAC3F,UAAU,CAAC,IAAI,CAAC;4BACd,KAAK,EAAE,CAAC;4BACR,IAAI,EAAE,QAAA,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI;yBACxB,CAAC,CAAC;qBACJ;oBACD,KAAK,CAAC,IAAI,CAAC;wBACT,KAAK,EAAE,OAAO;wBACd,IAAI,EAAE,UAAU;qBACjB,CAAC,CAAA;iBACH;gBACD,IAAG,OAAO,GAAC,CAAC,EAAC;oBACX,OAAO,EAAE,CAAC;oBACV,UAAU,GAAG,EAAE,CAAC;oBAChB,KAAkB,UAAS,EAAT,cAAA,iBAAS,EAAT,uBAAS,EAAT,IAAS,EAAE;wBAAxB,IAAM,GAAG,kBAAA;wBACZ,UAAU,CAAC,IAAI,CAAC;4BACd,KAAK,EAAE,CAAC;4BACR,IAAI,EAAE,GAAG,CAAC,IAAI;yBACf,CAAC,CAAC;qBACJ;oBACD,KAAK,CAAC,IAAI,CAAC;wBACT,KAAK,EAAE,OAAO;wBACd,IAAI,EAAE,UAAU;qBACjB,CAAC,CAAC;iBACJ;aACF;YACD,OAAO,KAAK,CAAC;QACf,CAAC;QACD;;;;;WAKG;QACI,mBAAU,GAAjB,UAAkB,GAAW,EAAE,KAAa,EAAE,IAAY;YACxD,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,WAAW,CAAC,KAAK,GAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAChD,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC/B,IAAI,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;YACjF,IAAI,MAAM,GAAG,CAAC,CAAC;YACf,IAAG,CAAC,GAAG,CAAC,EAAC;gBACP,CAAC,IAAI,CAAC,CAAC,CAAC;gBACR,IAAI,IAAI,GAAG,CAAC,CAAC;gBACb,OAAM,CAAC,GAAG,IAAI,EAAC;oBACb,IAAI,IAAI,CAAC,CAAC;iBACX;gBACD,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC;aACnB;iBAAM;gBACL,MAAM,GAAG,CAAC,GAAC,CAAC,CAAC;aACd;YACD,IAAI,QAAQ,GAAG,QAAA,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC;YACtC,OAAO,QAAQ,CAAC;QAClB,CAAC;QACD,8BAAW,GAAX,UAAY,KAAyB,EAAE,IAAY;YACjD,IAAI,GAAG,GAAU,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;YAC1C,IAAG,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,WAAW,EAAC;gBAC1C,KAAoB,UAAiB,EAAjB,KAAA,IAAI,CAAC,MAAM,CAAC,KAAK,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;oBAAlC,IAAM,KAAK,SAAA;oBACd,IAAG,KAAK,CAAC,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,CAAC,MAAM,KAAK,WAAW,EAAC;wBAC7D,KAAsB,UAAY,EAAZ,KAAA,KAAK,CAAC,MAAM,EAAZ,cAAY,EAAZ,IAAY,EAAE;4BAA/B,IAAM,OAAO,SAAA;4BAChB,IAAG,OAAO,CAAC,IAAI,KAAK,KAAK,EAAC;gCACxB,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;gCAC1B,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;gCAC9B,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;gCACxB,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;gCACxB,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;gCACxB,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;gCAC1B,MAAM;6BACP;yBACF;wBACD,MAAM;qBACP;iBACF;aACF;YACD,OAAO,GAAG,CAAC;QACb,CAAC;QACD,+BAAY,GAAZ,UAAa,KAAa,EAAE,IAAY;YACtC,IAAI,OAAO,GAAU,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,GAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACvE,IAAI,OAAO,GAAG,CAAC,OAAO,OAAO,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAA,CAAC,CAAC,EAAE,CAAC;YACxF,IAAI,QAAQ,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,GAAC,GAAG,GAAC,OAAO,CAAC;YACpD,sDAAsD;YACtD,IAAI,QAAQ,GACZ,qDAAgD,OAAO,wBAAiB,OAAO,CAAC,IAAK,8DAE3D,QAAQ,uPAU5B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAM,CAAC,uCAE/B,CAAC;YACV,OAAO,QAAQ,CAAC;QAClB,CAAC;QACD,gCAAa,GAAb,UAAc,KAAa;YACzB,IAAI,QAAQ,GAAG,EAAE,CAAC;YAAC,IAAI,UAAU,GAAG,KAAK,EAAE,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,KAAK,EAAE,WAAW,GAAG,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;YAChI,IAAG,OAAO,KAAK,KAAK,WAAW,EAAC;gBAC9B,KAAmB,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK,EAAE;oBAArB,IAAM,IAAI,cAAA;oBACb,IAAG,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAC;wBAAE,UAAU,GAAG,IAAI,CAAC;qBAAE;oBACjD,QAAQ;wBACR,sCACI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAK,EAAE,UAAU,CAAC,wBACrC,CAAC;iBACV;gBACD,IAAG,CAAC,WAAW,EAAC;oBACd,IAAI,UAAU,GAAG,CAAC,CAAC;oBACnB,QAAQ,IAAI,qBAAmB,CAAC;oBAChC,OAAM,UAAU,IAAI,QAAA,SAAS,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,EAAN,CAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAC;wBAC/D,QAAQ,IAAI,aAAa,CAAC;wBAC1B,UAAU,EAAE,CAAC;qBACd;oBACD,QAAQ,IAAG,SAAS,CAAC;iBACtB;aACF;YACD,OAAO,QAAQ,CAAC;QAClB,CAAC;QACD,+BAAY,GAAZ,UAAa,IAAW,EAAE,UAAmB;YAC3C,IAAI,QAAQ,GAAG,EAAE,CAAC;YAClB,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACvC,KAAkB,UAAS,EAAT,cAAA,iBAAS,EAAT,uBAAS,EAAT,IAAS,EAAE;gBAAxB,IAAM,GAAG,kBAAA;gBACZ,IAAG,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAC;oBAC3B,MAAM;iBACP;gBACD,QAAQ,IAAI,aAAa,CAAC;aAC3B;YACD,KAAkB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;gBAAnB,IAAM,GAAG,aAAA;gBACZ,QAAQ;oBACR,cAAW,GAAG,CAAC,KAAK,SAAI,GAAG,CAAC,KAAM,CAAC,KAAK,SAAI,GAAG,CAAC,IAAK,CAAC,KAAK,WAAK,GAAG,CAAC,KAAK,YAAS,CAAC;aACpF;YACD,IAAG,UAAU,IAAI,OAAO,KAAK,QAAA,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAC;gBAC7C,IAAI,UAAU,GAAG,QAAA,SAAS,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,EAAN,CAAM,CAAC,CAAC,OAAO,CAAC,OAAQ,CAAC,CAAC;gBAC9D,OAAM,UAAU,KAAK,QAAA,SAAS,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,EAAN,CAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAC;oBAChE,QAAQ,IAAI,aAAa,CAAC;oBAC1B,UAAU,EAAE,CAAC;iBACd;aACF;YACD,OAAO,QAAQ,CAAC;QAClB,CAAC;QACD,mCAAgB,GAAhB,UAAiB,MAAe;YAC9B,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,KAAoB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAM,EAAE;gBAAvB,IAAM,KAAK,eAAA;gBACd,IAAI;oBACJ,gCAA0B,KAAK,CAAC,IAAK,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,GAAC,KAAK,CAAC,IAAK,CAAC,KAAK,SAAI;0BACtE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAK,CAAC,KAAK,CAAC;0BACpD,UAAU,CAAC;aACb;YACD,OAAO,IAAI,CAAC;QACd,CAAC;QACD;;;;;WAKG;QACH,+BAAY,GAAZ,UAAa,IAAW,EAAE,WAAkB;YAC1C,IAAI,QAAQ,GAAW,CAAC,CAAC;YACzB,IAAI,KAAK,GAAG,IAAI,IAAI,CAClB,IAAI,CAAC,IAAI,CAAC,KAAK,EACf,IAAI,CAAC,KAAK,CAAC,KAAK,EAChB,IAAI,CAAC,GAAG,CAAC,KAAK,CACf,CAAC;YACF,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YACxB,IAAI,KAAK,GAAG,IAAI,IAAI,CAClB,WAAW,CAAC,IAAI,CAAC,KAAK,EACtB,WAAW,CAAC,KAAK,CAAC,KAAK,EACvB,WAAW,CAAC,GAAG,CAAC,KAAK,CACtB,CAAC;YACF,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YACxB,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;YAC5B,IAAI,MAAM,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAG,KAAK,KAAK,MAAM,EAAC;gBAClB,QAAQ,GAAG,CAAC,CAAC;aACd;iBAAM,IAAG,KAAK,GAAG,MAAM,EAAC;gBACvB,QAAQ,GAAG,CAAC,CAAC;aACd;iBAAM;gBACL,QAAQ,GAAG,CAAC,CAAC,CAAC;aACf;YACD,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;YACrC,OAAO,QAAQ,CAAC;QAClB,CAAC;QACD;;;;WAIG;QACH,4BAAS,GAAT,UAAU,MAAe;YACvB,IAAI,SAAS,GAAa,EAAE,CAAC;YAC7B,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK;gBAClB,IAAG,OAAO,KAAK,CAAC,SAAS,KAAK,QAAQ,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,QAAQ,EAAC;oBAC1E,4DAA4D;oBAC5D,IAAI,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,QAAQ,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC;oBAC3D,IAAI,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,QAAQ,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC;oBACzD,6CAA6C;oBAC7C,SAAS,CAAC,IAAI,CAAC;wBACb,EAAE,EAAE,KAAK,CAAC,EAAE;wBACZ,IAAI,EAAE,KAAK,CAAC,IAAI;wBAChB,MAAM,EAAE,KAAK,CAAC,MAAM;wBACpB,SAAS,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC5C,OAAO,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;qBAC3C,CAAC,CAAA;iBACH;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACxB,wBAAwB;QAC1B,CAAC;QACD,gCAAa,GAAb,UAAc,UAAuB;YACnC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC/B,CAAC;QACD,qCAAkB,GAAlB;YACE,IAAI,EAAE,GAAG,IAAI,CAAC;YACd,EAAE,CAAC,gBAAgB,EAAE,CAAC;YACtB,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK;gBACrB,IAAI,OAAO,KAAK,CAAC,SAAS,KAAK,QAAQ,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,QAAQ,EAAC;oBAC3E,IAAM,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;oBACrE,IAAM,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;oBACvE,IAAM,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;oBACnE,IAAI,EAAE,SAAQ,EAAE,EAAE,SAAQ,CAAC;oBAC3B,KAAmB,UAAe,EAAf,KAAA,EAAE,CAAC,MAAM,CAAC,KAAK,EAAf,cAAe,EAAf,IAAe,EAAE;wBAA/B,IAAM,IAAI,SAAA;wBACb,IAAG,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,EAAC;4BACtC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;4BAChB,KAAoB,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW,EAAE;gCAA5B,IAAM,KAAK,SAAA;gCACd,IAAG,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAC;oCAC/E,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;oCACjB,KAAkB,UAAU,EAAV,KAAA,KAAK,CAAC,IAAI,EAAV,cAAU,EAAV,IAAU,EAAE;wCAAzB,IAAM,GAAG,SAAA;wCACZ,IAAG,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAC;4CAC9F,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yCACxB;qCACF;oCACD,EAAE,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;iCAC/B;6BACF;yBACF;qBACF;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QACD,sCAAmB,GAAnB,UAAoB,KAAY;oCACnB,GAAG;gBACZ,IAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;gBACnC,IAAG,QAAQ,IAAI,CAAC,EAAC;oBACf,IAAM,MAAM,GAAG,OAAK,UAAU,CAAC,IAAI,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,CAAC,EAAE,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAA9B,CAA8B,CAAC,CAAC;oBAC1E,GAAG,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;iBAC1B;qBAAK,IAAG,QAAQ,IAAI,CAAC,EAAC;oBACrB,IAAM,OAAO,GAAG,OAAK,UAAU,CAAC,IAAI,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,CAAC,EAAE,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAA9B,CAA8B,CAAC,CAAC;oBAC3E,IAAM,OAAO,GAAG,OAAK,UAAU,CAAC,IAAI,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,CAAC,EAAE,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAA9B,CAA8B,CAAC,CAAC;oBAC3E,GAAG,CAAC,KAAK,GAAG,iCAA+B,OAAO,CAAC,KAAK,cAAS,OAAO,CAAC,KAAK,UAAO,CAAC;iBACvF;qBAAK,IAAG,QAAQ,IAAI,CAAC,EAAC;iBAEtB;;;YAXH,KAAkB,UAAU,EAAV,KAAA,KAAK,CAAC,IAAI,EAAV,cAAU,EAAV,IAAU;gBAAvB,IAAM,GAAG,SAAA;wBAAH,GAAG;aAYb;YACD,IAAI,KAAK,GAAW,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACzD,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QACtB,CAAC;QACD,mCAAgB,GAAhB;YACE,IAAI,EAAE,GAAG,IAAI,CAAC;YACd,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK;gBACrB,IAAI,OAAO,KAAK,CAAC,SAAS,KAAK,QAAQ,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,QAAQ,EAAC;oBAC3E,IAAM,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC;oBACrE,IAAM,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC;oBACvE,IAAM,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;oBACnE,IAAI,EAAE,SAAQ,EAAE,EAAE,SAAQ,CAAC;oBAC3B,KAAmB,UAAe,EAAf,KAAA,EAAE,CAAC,MAAM,CAAC,KAAK,EAAf,cAAe,EAAf,IAAe,EAAE;wBAA/B,IAAM,IAAI,SAAA;wBACb,IAAG,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,EAAC;4BACtC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;4BAChB,KAAoB,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW,EAAE;gCAA5B,IAAM,KAAK,SAAA;gCACd,IAAG,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAC;oCAC/E,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;oCACjB,KAAkB,UAAU,EAAV,KAAA,KAAK,CAAC,IAAI,EAAV,cAAU,EAAV,IAAU,EAAE;wCAAzB,IAAM,GAAG,SAAA;wCACZ,IAAG,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAC;4CAC9F,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;yCACjB;qCACF;oCACD,EAAE,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;iCAC/B;6BACF;yBACF;qBACF;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QACH,eAAC;IAAD,CAnhBA,AAmhBC,IAAA;IAnhBY,gBAAQ,WAmhBpB,CAAA;AACH,CAAC,EAzrBS,OAAO,KAAP,OAAO,QAyrBhB;AAED,iBAAS,OAAO,CAAA","file":"calendar.js","sourcesContent":["namespace ITESCAM {\n\n  const constMonths: zellerMonth[] = [\n    { name: \"enero\", value: 1, numdays: 31, zellerVal: 11 },\n    { name: \"febrero\", value: 2, numdays: 28, zellerVal: 12 },\n    { name: \"marzo\", value: 3, numdays: 31, zellerVal: 1 },\n    { name: \"abril\", value: 4, numdays: 30, zellerVal: 2 },\n    { name: \"mayo\", value: 5, numdays: 31, zellerVal: 3 },\n    { name: \"junio\", value: 6, numdays: 30, zellerVal: 4 },\n    { name: \"julio\", value: 7, numdays: 31, zellerVal: 5 },\n    { name: \"agosto\", value: 8, numdays: 31, zellerVal: 6 },\n    { name: \"septiembre\", value: 9, numdays: 30, zellerVal: 7 },\n    { name: \"octubre\", value: 10, numdays: 31, zellerVal: 8 },\n    { name: \"noviembre\", value: 11, numdays: 30, zellerVal: 9 },\n    { name: \"diciembre\", value: 12, numdays: 31, zellerVal: 10 },\n  ];\n\n  export const constDays = [\n    { name: \"domingo\" },\n    { name: \"lunes\" },\n    { name: \"martes\" },\n    { name: \"miércoles\" },\n    { name: \"jueves\" },\n    { name: \"viernes\" },\n    { name: \"sábado\" },\n  ];\n\n  export interface Day {\n    name?: string;\n    value: number;\n    abbr?: string;\n    month?: Month;\n    year?: Year;\n    color?: string;\n    events?: Event[]\n  }\n\n  export interface Month {\n    name?: string;\n    value: number;\n    numdays: number;\n    days?: Day[];\n    weeks?: Week[];\n    year?: Year;\n  }\n\n  interface zellerMonth extends Month {\n    zellerVal?: number;\n  }\n\n  export interface Week {\n    value: number;\n    days?: Day[];\n  }\n\n  export interface Year {\n    value: number;\n    months?: Month[];\n  }\n\n  export interface Event {\n    id: number;\n    name: string;\n    typeId: number;\n    startDate?: MDate | string;\n    endDate?: MDate | string;\n    important?: boolean;\n    iconPath?: string;\n    url?: string;\n    description?: string;\n  }\n\n  export interface EventType {\n    id: number;\n    name: string;\n    color: string;\n    required?: boolean;\n  }\n\n  export class MDate {\n    day!: Day;\n    month!: Month;\n    year!: Year;\n    constructor(day: number, month: number, year:number){\n      this.day = { value: day };\n      this.month = this.getMonthByMMYY(month, year);\n      this.year = { value: year };\n    }\n    getMonthByMMYY(month: number, year: number): Month {\n      let nmon: Month = { value: 0, numdays: 0 };\n      for (const mon of constMonths) {\n        if(mon.value === month){\n          nmon.value = month;\n          if(mon.name === 'febrero' && MDate.isLeapYear(year)){\n            nmon.numdays = mon.numdays++;\n          } else {\n            nmon.numdays = mon.numdays;\n          }\n          nmon.year = { value: year };\n          return nmon;\n        }\n      }\n      return { name: 'enero', value: 1, numdays: 31 };\n    }\n    static isLeapYear(year: number): boolean {\n\t\t\tlet response = false;\n\t\t\tresponse = (year%4==0) ? ((year%100==0) ? ((year%400==0) ? true : false): true ) : false;\n\t\t\treturn response;\n    }\n    getCurrentDate() {\n      return { day: this.day, month: this.month, year: this.year };\n    }\n    toString(): string {\n      return `${this.day.value}/${this.month.value}/${this.year.value}`;\n    }\n  }\n\n  export interface Cycle {\n    startDate: MDate;\n    endDate: MDate;\n    type?: string;\n    years?: Year[];\n    name?: string;\n  }\n\n  export interface Period {\n    startDate: MDate;\n    endDate: MDate;\n    cycles?: Cycle[];\n    years?: Year[];\n    name?: string;\n  }\n\n  export function capitalize(word: string|undefined): string {\n    let response = '';\n    if(typeof word === 'string'){\n      response = word[0].toUpperCase() + word.slice(1);\n    }\n    return response;\n  }\n\n  function getCompleteMDate(date: MDate): MDate {\n    let name = Calendar.getDayName(date.day.value, date.month.value, date.year.value);\n    let mon: Month = {\n      value: date.month.value,\n      numdays: date.month.numdays,\n      name: constMonths[date.month.value-1].name,\n      year: date.year\n    };\n    let ndate = date;\n    ndate.day = {\n      value: date.day.value,\n      name: name,\n      abbr: (typeof name === \"string\") ? name.substring(0, 3) : undefined,\n      month: mon,\n      year: date.year\n    };\n    // console.log(date.month);\n    ndate.month = mon;\n    ndate.year = {\n      value: date.year.value\n    }\n    return ndate;\n  }\n\n  export class Calendar {\n    period!: Period;\n    periods?: Period[];\n    eventTypes?: EventType[];\n    events?: Event[];\n    // cycles?: Cycle[];\n    constructor()\n    constructor(startDate?: MDate, endDate?: MDate) {\n      if(typeof startDate !== \"undefined\" && typeof endDate !== \"undefined\"){\n        this.period = this.createPeriod(startDate, endDate);\n        this.periods = [];\n      } else {\n        this.period = this.emptyPeriod();\n      }\n    }\n    /* Start Periods Methods */\n    createPeriod(startDate: MDate, endDate:MDate): Period {\n      let start = getCompleteMDate(startDate);\n      let end = getCompleteMDate(endDate);\n      let name = startDate.year.value.toString() +\"-\"+endDate.year.value.toString();\n      let period: Period = {\n        startDate: start,\n        endDate: end,\n        years: this.getYears(start, end),\n        name: name\n      };\n      return period;\n    }\n    emptyPeriod(): Period {\n      let start = new MDate(1,1,2000);\n      let end = new MDate(1,1,2000);\n      let period: Period = {\n        startDate: start,\n        endDate: end,\n      };\n      return period;\n    }\n    setPeriod(period: Period): void {\n      this.period = period;\n    }\n    /**\n     * Tries to add a new period to the periods array, if exists already it returns `false`, else `true`\n     * @param period\n     */\n    addPeriod(period: Period): boolean {\n      if(this.periods.find(elem => elem.name == period.name))\n        return false;\n      this.periods.push(period);\n      return true;\n    }\n    setActivePeriod(name: string): boolean {\n      let active: Period | undefined;\n      active = this.periods.find(elem => elem.name == name)\n      if(active){\n        this.period = active;\n        return true;\n      }\n      return false;\n    }\n    /* End Period Methods*/\n    /* Start cycles Methods */\n    /**\n     * Genera los ciclos dentro del periodo dado la las fecha de final de N y la fecha de inicio de P.\n     * @param endDateN La fecha donde terminará el ciclo N\n     * @param startDateP la fecha en que iniciará el ciclo P\n     */\n    generateCycles(endDateN: MDate, startDateP: MDate): void {\n      let cycles: Cycle[] = [];\n      let __startDateN = this.period.startDate, __startDateP = getCompleteMDate(startDateP);\n      let __endDateN = getCompleteMDate(endDateN), __endDateP = this.period.endDate;\n      cycles.push({\n        startDate: __startDateN,\n        endDate: __endDateN,\n        type: \"N\",\n        years: this.getYears(__startDateN, __endDateN),\n        name: this.period.name+'N'\n      });\n      cycles.push({\n        startDate: __startDateP,\n        endDate: __endDateP,\n        type: \"P\",\n        years: this.getYears(__startDateN, __endDateN),\n        name: this.period.name+'P'\n      });\n      this.period.cycles = cycles;\n    }\n    /* End Cycles Methods*/\n    getYears(startDate: MDate, endDate: MDate): Year[] {\n      let years: Year[] = [];\n      const startYear = startDate.year.value, endYear = endDate.year.value;\n      const startMonth = startDate.month.value, lastMonth = endDate.month.value;\n      const startDay = startDate.day.value, lastDay = endDate.day.value;\n      let currentYear = startYear;\n      let month: Month;\n      while(currentYear <= endYear){\n        month = constMonths[0];\n        if(currentYear === endYear){\n          month.year = { value: currentYear };\n          years.push({\n            value: currentYear,\n            months: this.getMonths(month , constMonths[lastMonth-1], undefined, lastDay)\n          });\n        } else {\n          if(currentYear === startYear){\n            month = constMonths[startMonth-1];\n            month.year = { value: currentYear };\n            years.push({\n              value: currentYear,\n              months: this.getMonths(month, undefined , startDay, undefined)\n            });\n          } else {\n            month.year = { value: currentYear };\n            years.push({\n              value: currentYear,\n              months: this.getMonths(month)\n            });\n          }\n        }\n        currentYear++;\n      }\n      return years;\n    }\n    getMonths(startMonth: Month, endMonth?: Month, startDay?: number, endDay?: number): Month[] {\n      let months: Month[] = [];\n      let __startMonth = startMonth.value, __endMonth = 12, __year = 2000;\n      let __startDay = 1, __endDay = constMonths[11].numdays;\n      if(typeof endMonth !== \"undefined\"){\n        __endMonth = endMonth.value;\n      }\n      if(typeof startMonth.year !== \"undefined\"){\n        __year = startMonth.year.value;\n      }\n      let currentMonth = __startMonth;\n      let month: Month = { value: 0, numdays: 0 }; let days: Day[] = [];\n      let weeks: Week[] = [];\n      while(currentMonth <= __endMonth){\n        month = constMonths[currentMonth-1];\n        month.year = { value: __year };\n        if(month.value === constMonths[1].value && MDate.isLeapYear(__year)){\n          month.numdays++;\n        }\n        if(currentMonth === __startMonth && typeof startDay !== \"undefined\"){\n          __startDay = startDay;\n          __endDay = month.numdays;\n        }else if(currentMonth === __endMonth && typeof endDay !== \"undefined\"){\n          __startDay = 1;\n          __endDay = endDay;\n        } else {\n          __startDay = 1;\n          __endDay = month.numdays;\n        }\n        days = this.getDays(month, __startDay, __endDay);\n        weeks = this.getWeeksForCalendar(days);\n        // weeks = this.getWeeks(days);\n        months.push({\n          value: currentMonth,\n          numdays: month.numdays,\n          days: days,\n          weeks: weeks,\n          name: constMonths[currentMonth-1].name,\n          year: month.year\n        });\n        currentMonth++;\n      }\n      return months;\n    }\n    getWeeks(days: Day[]): Week[] {\n      let weeks: Week[] = [], daysOfWeek: Day[] = [];\n      let weekNum = 1; let lastDay: Day;\n      if(typeof days !== \"undefined\"){\n        lastDay = days[days.length -1];\n        for (const day of days) {\n          daysOfWeek.push(day);\n          if(day.name == \"sábado\" || day === lastDay){\n            weeks.push({\n              value: weekNum,\n              days: daysOfWeek\n            })\n            weekNum++;\n            daysOfWeek = [];\n          }\n        }\n      }\n      return weeks;\n    }\n    getDays(month: Month, startDay: number, endDay: number): Day[] {\n      let days: Day[] = [];\n      let mon: Month = { value: 0, numdays: 0 };\n      mon.value = month.value;\n      mon.numdays = month.numdays;\n      mon.name = month.name;\n      mon.year = month.year;\n      let currentDay = startDay;\n      let year = (typeof month.year !== \"undefined\") ? month.year.value : 2000;\n      let name: string;\n      while(currentDay <= endDay){\n        name = Calendar.getDayName(currentDay, month.value, year)!;\n        days.push({\n          value: currentDay,\n          month: mon,\n          year: month.year,\n          name: name,\n          abbr: (typeof name === \"string\") ? name.substring(0, 3) : undefined,\n          color: '',\n          events: []\n        });\n        //color : '-moz-linear-gradient(left, black, grey 30%, green 30%, white)'\n        currentDay++;\n      }\n      return days;\n    }\n    /**\n     * Get the days of the month and completes it until there's a complete sheet of calendar\n     * @param days the days to map\n     */\n    getWeeksForCalendar(days: Day[]): Week[] {\n      let weeks: Week[] = [], daysOfWeek: Day[] = [];\n      let weekNum = 1;\n      let startDay: Day, lastDay: Day;\n      if(typeof days !== \"undefined\"){\n        startDay = days[0];\n        lastDay = days[days.length -1];\n        if(startDay.name != constDays[0].name){\n          for (const day of constDays) {\n            if(day.name == startDay.name){\n              break;\n            }\n            daysOfWeek.push({\n              value: 0,\n              name: day.name\n            });\n          }\n        }\n        for (const day of days) {\n          daysOfWeek.push(day);\n          if(day.name == \"sábado\"){\n            weeks.push({\n              value: weekNum,\n              days: daysOfWeek\n            })\n            if(day != lastDay ) weekNum++;\n            daysOfWeek = [];\n          }\n        }\n        if(lastDay.name != constDays[constDays.length-1].name){\n          for(let i = constDays.map(e => e.name).indexOf(lastDay.name!) + 1; i < constDays.length; i++){\n            daysOfWeek.push({\n              value: 0,\n              name: constDays[i].name\n            });\n          }\n          weeks.push({\n            value: weekNum,\n            days: daysOfWeek\n          })\n        }\n        if(weekNum<6){\n          weekNum++;\n          daysOfWeek = [];\n          for (const day of constDays) {\n            daysOfWeek.push({\n              value: 0,\n              name: day.name\n            });\n          }\n          weeks.push({\n            value: weekNum,\n            days: daysOfWeek\n          });\n        }\n      }\n      return weeks;\n    }\n    /**\n     * Applies the Zeller rule to calculate the name of an speciefied Date\n     * @param {number} day The day of in number format\n     * @param {number} month The month in number format\n     * @param {number} year The year in number format\n     */\n    static getDayName(day: number, month: number, year: number): string | undefined {\n      let k = day, m = constMonths[month-1].zellerVal;\n      let yearText = year.toString();\n      let C = parseInt(yearText.substring(0,2));\n      let d = parseInt(yearText.substring(2));\n      let D = (m>=11) ? (d-1) : d;\n      let f = k + Math.floor((13*m-1)/5) + D + Math.floor(D/4) + Math.floor(C/4) - 2*C;\n      let numDay = 0;\n      if(f < 0){\n        f *= -1;\n        let mult = 7;\n        while(f > mult){\n          mult += 7;\n        }\n        numDay = mult - f;\n      } else {\n        numDay = f%7;\n      }\n      let response = constDays[numDay].name;\n      return response;\n    }\n    searchMonth(month: string | undefined, year: number): Month {\n      let mon: Month = { value: 0, numdays: 0 };\n      if(typeof this.period.years !== \"undefined\"){\n        for (const cYear of this.period.years) {\n          if(cYear.value === year && typeof cYear.months !== \"undefined\"){\n            for (const cMonths of cYear.months) {\n              if(cMonths.name === month){\n                mon.value = cMonths.value;\n                mon.numdays = cMonths.numdays;\n                mon.days = cMonths.days;\n                mon.name = cMonths.name;\n                mon.year = cMonths.year;\n                mon.weeks = cMonths.weeks;\n                break;\n              }\n            }\n            break;\n          }\n        }\n      }\n      return mon;\n    }\n    getTableHTML(month: number, year: number): string {\n      let monNode: Month = this.searchMonth(constMonths[month-1].name, year);\n      let monYear = (typeof monNode.year !== \"undefined\") ? monNode.year.value.toString(): \"\";\n      let yearText = capitalize(monNode.name)+' '+monYear;\n      // let id = `${monNode.name!.substring(0,3)+monYear}`;\n      let HTMLText: string =\n      `<table onclick=\"toggleView(this)\" data-year=\"${monYear}\" data-month=\"${monNode.name!}\">\n        <tbody>\n          <tr><th colspan=\"7\">${yearText}</th></tr>\n          <tr class=\"dweek\">\n            <td>D</td>\n            <td>L</td>\n            <td>M</td>\n            <td>M</td>\n            <td>J</td>\n            <td>V</td>\n            <td>S</td>\n          </tr>\n          ${this.drawWeeksGrid(monNode.weeks!)}\n        </tbody>\n      </table>`;\n      return HTMLText;\n    }\n    drawWeeksGrid(weeks: Week[] ): string {\n      let response = ''; let isLastWeek = false, lastWeek = weeks[weeks.length-1].value, hasSixWeeks = (lastWeek <= 5) ? false : true;\n      if(typeof weeks !== \"undefined\"){\n        for (const week of weeks) {\n          if(week.value === lastWeek){ isLastWeek = true; }\n          response +=\n          `<tr class=\"week\">\n            ${this.drawDaysGrid(week.days!, isLastWeek)}\n          </tr>\\n`;\n        }\n        if(!hasSixWeeks){\n          let currentDay = 0;\n          response += `<tr class=\"week\">`;\n          while(currentDay <= constDays.map(e => e.name).indexOf(\"sábado\")){\n            response += `<td></td>\\n`;\n            currentDay++;\n          }\n          response +=`</tr>\\n`;\n        }\n      }\n      return response;\n    }\n    drawDaysGrid(days: Day[], isLastWeek: boolean): string {\n      let response = '';\n      let lastDay = days[days.length-1].name;\n      for (const day of constDays) {\n        if(day.name === days[0].name){\n          break;\n        }\n        response += `<td></td>\\n`;\n      }\n      for (const day of days) {\n        response +=\n        `<td id=\"${day.value}_${day.month!.value}_${day.year!.value}\">${day.value}</td>\\n`;\n      }\n      if(isLastWeek && lastDay !== constDays[6].name){\n        let currentDay = constDays.map(e => e.name).indexOf(lastDay!);\n        while(currentDay !== constDays.map(e => e.name).indexOf(\"sábado\")){\n          response += `<td></td>\\n`;\n          currentDay++;\n        }\n      }\n      return response;\n    }\n    getAllMonthsHTML(months: Month[]): string {\n      let text = '';\n      for (const month of months) {\n        text +=\n        `<div class=\"month\" id=\"${month.name!.substring(0,3)+month.year!.value}\">`\n          + this.getTableHTML(month.value, month.year!.value)\n        +'</div>\\n';\n      }\n      return text;\n    }\n    /**\n     * Compares two dates, and returns numbers depending if `anotherDate` is lower, same of higher than `date`\n     * @param date The first date\n     * @param anotherDate The date to be compared\n     * @returns {number} `0` if they're the same, `1` if `date` is higher, and `-1` if `date` is lower.\n     */\n    compareDates(date: MDate, anotherDate: MDate): number {\n      let response: number = 0;\n      let fdate = new Date(\n        date.year.value,\n        date.month.value,\n        date.day.value\n      );\n      fdate.setHours(0,0,0,0);\n      let sdate = new Date(\n        anotherDate.year.value,\n        anotherDate.month.value,\n        anotherDate.day.value\n      );\n      sdate.setHours(0,0,0,0);\n      let first = fdate.getTime();\n      let second = sdate.getTime();\n      if(first === second){\n        response = 0;\n      } else if(first > second){\n        response = 1;\n      } else {\n        response = -1;\n      }\n      console.log(first, second, response);\n      return response;\n    }\n    /**\n     * This gets the events and assigns them to the calendar, and it normalizes the date that comes as string.\n     * We receive a string date of the format `yyyy-MM-dd`\n     * @param events\n     */\n    setEvents(events: Event[]) {\n      let nomEvents: Event[] =  [];\n      events.forEach(event => {\n        if(typeof event.startDate === \"string\" && typeof event.endDate === \"string\"){\n          /// sdA & edA stands for startDateArray and end... the same.\n          let sdA = event.startDate.split('-').map(n => parseInt(n));\n          let edA = event.endDate.split('-').map(n => parseInt(n));\n          //var[0] = YEAR, var[1] = MONTH, var[2] = DAY\n          nomEvents.push({\n            id: event.id,\n            name: event.name,\n            typeId: event.typeId,\n            startDate: new MDate(sdA[2], sdA[1], sdA[0]),\n            endDate: new MDate(edA[2], edA[1], edA[0])\n          })\n        }\n      });\n      this.events = nomEvents;\n      // this.events = events;\n    }\n    setEventsType(eventTypes: EventType[]){\n      this.eventTypes = eventTypes;\n    }\n    populateDayWEvents(){\n      let el = this;\n      el.restoreDayEvents();\n      el.events.forEach(event => {\n        if (typeof event.startDate !== \"string\" && typeof event.endDate !== \"string\"){\n          const sy = event.startDate.year.value, ey = event.endDate.year.value;\n          const sm = event.startDate.month.value, em = event.endDate.month.value;\n          const sd = event.startDate.day.value, ed = event.endDate.day.value;\n          let cy: number, cm: number;\n          for (const year of el.period.years) {\n            if(year.value >= sy && year.value <= ey){\n              cy = year.value;\n              for (const month of year.months) {\n                if((month.value >= sm && cy == sy) || (month.value <= em && cy > sy && cy <= ey)){\n                  cm = month.value;\n                  for (const day of month.days) {\n                    if((day.value >= sd && cm == sm && day.value <= ed) || (day.value <= ed && cm > sm && cm <= em)){\n                      day.events.push(event);\n                    }\n                  }\n                  el.updateWeeksForSheet(month);\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n    updateWeeksForSheet(month: Month){\n      for (const day of month.days) {\n        const evLength = day.events.length;\n        if(evLength == 1){\n          const evType = this.eventTypes.find(et => et.id === day.events[0].typeId);\n          day.color = evType.color;\n        }else if(evLength == 2){\n          const evType1 = this.eventTypes.find(et => et.id === day.events[0].typeId);\n          const evType2 = this.eventTypes.find(et => et.id === day.events[1].typeId);\n          day.color = `-moz-linear-gradient(90deg, ${evType1.color} 50%, ${evType2.color} 50%)`;\n        }else if(evLength >= 3){\n\n        }\n      }\n      let weeks: Week[] = this.getWeeksForCalendar(month.days);\n      month.weeks = weeks;\n    }\n    restoreDayEvents(){\n      let el = this;\n      el.events.forEach(event => {\n        if (typeof event.startDate !== \"string\" && typeof event.endDate !== \"string\"){\n          const sy = event.startDate.year.value, ey = event.endDate.year.value;\n          const sm = event.startDate.month.value, em = event.endDate.month.value;\n          const sd = event.startDate.day.value, ed = event.endDate.day.value;\n          let cy: number, cm: number;\n          for (const year of el.period.years) {\n            if(year.value >= sy && year.value <= ey){\n              cy = year.value;\n              for (const month of year.months) {\n                if((month.value >= sm && cy == sy) || (month.value <= em && cy > sy && cy <= ey)){\n                  cm = month.value;\n                  for (const day of month.days) {\n                    if((day.value >= sd && cm == sm && day.value <= ed) || (day.value <= ed && cm > sm && cm <= em)){\n                      day.events = [];\n                    }\n                  }\n                  el.updateWeeksForSheet(month);\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n  }\n}\n\nexport = ITESCAM\n"]}