{"version":3,"sources":["calendar.ts"],"names":[],"mappings":"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","file":"calendar.js","sourcesContent":["namespace ITESCAM {\r\n\r\n  const constMonths: zellerMonth[] = [\r\n    { name: \"enero\",      value: 1,   numdays: 31, zellerVal: 11  },\r\n    { name: \"febrero\",    value: 2,   numdays: 28, zellerVal: 12  },\r\n    { name: \"marzo\",      value: 3,   numdays: 31, zellerVal: 1   },\r\n    { name: \"abril\",      value: 4,   numdays: 30, zellerVal: 2   },\r\n    { name: \"mayo\",       value: 5,   numdays: 31, zellerVal: 3   },\r\n    { name: \"junio\",      value: 6,   numdays: 30, zellerVal: 4   },\r\n    { name: \"julio\",      value: 7,   numdays: 31, zellerVal: 5   },\r\n    { name: \"agosto\",     value: 8,   numdays: 31, zellerVal: 6   },\r\n    { name: \"septiembre\", value: 9,   numdays: 30, zellerVal: 7   },\r\n    { name: \"octubre\",    value: 10,  numdays: 31, zellerVal: 8   },\r\n    { name: \"noviembre\",  value: 11,  numdays: 30, zellerVal: 9   },\r\n    { name: \"diciembre\",  value: 12,  numdays: 31, zellerVal: 10  },\r\n  ];\r\n\r\n  export const constDays = [\r\n    { name: \"domingo\" },\r\n    { name: \"lunes\" },\r\n    { name: \"martes\" },\r\n    { name: \"miércoles\" },\r\n    { name: \"jueves\" },\r\n    { name: \"viernes\" },\r\n    { name: \"sábado\" },\r\n  ];\r\n\r\n  export interface Day {\r\n    name?: string;\r\n    value: number;\r\n    abbr?: string;\r\n    month?: Month;\r\n    year?: Year;\r\n    color?: string;\r\n    /**\r\n     * This property indicates whether the font color is going to be `light (white)` or `dark (black)`\r\n     */\r\n    fontcolor?: string;\r\n    events?: Event[]\r\n  }\r\n\r\n  export interface Month {\r\n    name?: string;\r\n    value: number;\r\n    numdays: number;\r\n    days?: Day[];\r\n    weeks?: Week[];\r\n    year?: Year;\r\n  }\r\n\r\n  interface zellerMonth extends Month {\r\n    zellerVal?: number;\r\n  }\r\n\r\n  export interface Week {\r\n    value: number;\r\n    days?: Day[];\r\n  }\r\n\r\n  export interface Year {\r\n    value: number;\r\n    months?: Month[];\r\n  }\r\n\r\n  export interface Event {\r\n    id: number;\r\n    name: string;\r\n    typeId: number;\r\n    startDate?: MDate | string;\r\n    endDate?: MDate | string;\r\n    status: Status;\r\n    description?: string;\r\n  }\r\n\r\n  export interface EventType {\r\n    id: number;\r\n    name: string;\r\n    color: string;\r\n    classification: Classification;\r\n    required?: boolean;\r\n    'count_required'?: number;\r\n  }\r\n\r\n  export interface Classification {\r\n    id: number;\r\n    name: string;\r\n  }\r\n\r\n  const enum ETClassification {\r\n    OFFICIAL  = 1,\r\n    AREA      = 2,\r\n    ACADEMIC  = 3\r\n  }\r\n\r\n  export enum Status {\r\n    DISAPPROVED   = 1,\r\n    APPROVED      = 2,\r\n    PUBLISHED     = 3\r\n  }\r\n\r\n  export const EventStatus = [\r\n    { id: Status.DISAPPROVED,   name: 'Desaprobado' },\r\n    { id: Status.APPROVED,      name: 'Aprobado'    },\r\n    { id: Status.PUBLISHED,     name: 'Publicado'   },\r\n  ];\r\n\r\n  export class MDate {\r\n    day!: Day;\r\n    month!: Month;\r\n    year!: Year;\r\n    readonly time: number;\r\n\r\n    constructor(day: number, month: number, year:number){\r\n      this.day = { value: day };\r\n      this.month = this.getMonthByMMYY(month, year);\r\n      this.year = { value: year };\r\n      this.time = new Date(year, month - 1 , day).getTime();\r\n    }\r\n    getMonthByMMYY(month: number, year: number): Month {\r\n      let nmon: Month = { value: 0, numdays: 0 };\r\n      for (const mon of constMonths) {\r\n        if(mon.value === month){\r\n          nmon.value = month;\r\n          if(mon.name === 'febrero' && MDate.isLeapYear(year)){\r\n            nmon.numdays = mon.numdays + 1;\r\n          } else {\r\n            nmon.numdays = mon.numdays;\r\n          }\r\n          nmon.year = { value: year };\r\n          return nmon;\r\n        }\r\n      }\r\n      return { name: 'enero', value: 1, numdays: 31 };\r\n    }\r\n    static isLeapYear(year: number): boolean {\r\n\t\t\tlet response = false;\r\n\t\t\tresponse = (year%4==0) ? ((year%100==0) ? ((year%400==0) ? true : false): true ) : false;\r\n\t\t\treturn response;\r\n    }\r\n    getCurrentDate() {\r\n      return { day: this.day, month: this.month, year: this.year };\r\n    }\r\n    toString(): string {\r\n      return `${this.day.value}/${this.month.value}/${this.year.value}`;\r\n    }\r\n  }\r\n\r\n  export interface Cycle {\r\n    startDate: MDate;\r\n    endDate: MDate;\r\n    type?: string;\r\n    years?: Year[];\r\n    name?: string;\r\n  }\r\n\r\n  export interface Period {\r\n    startDate: MDate;\r\n    endDate: MDate;\r\n    cycles?: Cycle[];\r\n    years?: Year[];\r\n    name?: string;\r\n  }\r\n\r\n  export function capitalize(word: string|undefined): string {\r\n    let response = '';\r\n    if(typeof word === 'string'){\r\n      response = word[0].toUpperCase() + word.slice(1);\r\n    }\r\n    return response;\r\n  }\r\n\r\n  function getCompleteMDate(date: MDate): MDate {\r\n    let name = Calendar.getDayName(date.day.value, date.month.value, date.year.value);\r\n    let mon: Month = {\r\n      value: date.month.value,\r\n      numdays: date.month.numdays,\r\n      name: constMonths[date.month.value-1].name,\r\n      year: date.year\r\n    };\r\n    let ndate = date;\r\n    ndate.day = {\r\n      value: date.day.value,\r\n      name: name,\r\n      abbr: (typeof name === \"string\") ? name.substring(0, 3) : undefined,\r\n      month: mon,\r\n      year: date.year\r\n    };\r\n    // console.log(date.month);\r\n    ndate.month = mon;\r\n    ndate.year = {\r\n      value: date.year.value\r\n    }\r\n    return ndate;\r\n  }\r\n\r\n  export class Calendar {\r\n    period!: Period;\r\n    periods?: Period[];\r\n    eventTypes?: EventType[] = [];\r\n    events?: Event[] = [];\r\n    // cycles?: Cycle[];\r\n    constructor()\r\n    constructor(startDate?: MDate, endDate?: MDate) {\r\n      if(typeof startDate !== \"undefined\" && typeof endDate !== \"undefined\"){\r\n        this.period = this.createPeriod(startDate, endDate);\r\n        this.periods = [];\r\n      } else {\r\n        this.period = this.emptyPeriod();\r\n      }\r\n    }\r\n    /* Start Periods Methods */\r\n    createPeriod(startDate: MDate, endDate:MDate): Period {\r\n      let start = getCompleteMDate(startDate);\r\n      let end = getCompleteMDate(endDate);\r\n      let name = startDate.year.value.toString() +\"-\"+endDate.year.value.toString();\r\n      let period: Period = {\r\n        startDate: start,\r\n        endDate: end,\r\n        years: this.getYears(start, end),\r\n        name: name\r\n      };\r\n      return period;\r\n    }\r\n    emptyPeriod(): Period {\r\n      let start = new MDate(1,1,2000);\r\n      let end = new MDate(1,1,2000);\r\n      let period: Period = {\r\n        startDate: start,\r\n        endDate: end,\r\n      };\r\n      return period;\r\n    }\r\n    setPeriod(period: Period): void {\r\n      this.period = period;\r\n    }\r\n    /**\r\n     * Tries to add a new period to the periods array, if exists already it returns `false`, else `true`\r\n     * @param period\r\n     */\r\n    addPeriod(period: Period): boolean {\r\n      if(this.periods.find(elem => elem.name == period.name))\r\n        return false;\r\n      this.periods.push(period);\r\n      return true;\r\n    }\r\n    setActivePeriod(name: string): boolean {\r\n      let active: Period | undefined;\r\n      active = this.periods.find(elem => elem.name == name)\r\n      if(active){\r\n        this.period = active;\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    /* End Period Methods*/\r\n    /* Start cycles Methods */\r\n    /**\r\n     * Genera los ciclos dentro del periodo dado la las fecha de final de N y la fecha de inicio de P.\r\n     * @param endDateN La fecha donde terminará el ciclo N\r\n     * @param startDateP la fecha en que iniciará el ciclo P\r\n     */\r\n    generateCycles(endDateN: MDate, startDateP: MDate): void {\r\n      let cycles: Cycle[] = [];\r\n      let __startDateN = this.period.startDate, __startDateP = getCompleteMDate(startDateP);\r\n      let __endDateN = getCompleteMDate(endDateN), __endDateP = this.period.endDate;\r\n      cycles.push({\r\n        startDate: __startDateN,\r\n        endDate: __endDateN,\r\n        type: \"N\",\r\n        years: this.getYears(__startDateN, __endDateN),\r\n        name: this.period.name+'N'\r\n      });\r\n      cycles.push({\r\n        startDate: __startDateP,\r\n        endDate: __endDateP,\r\n        type: \"P\",\r\n        years: this.getYears(__startDateN, __endDateN),\r\n        name: this.period.name+'P'\r\n      });\r\n      this.period.cycles = cycles;\r\n    }\r\n    /* End Cycles Methods*/\r\n    getYears(startDate: MDate, endDate: MDate): Year[] {\r\n      let years: Year[] = [];\r\n      const startYear = startDate.year.value, endYear = endDate.year.value;\r\n      const startMonth = startDate.month.value, lastMonth = endDate.month.value;\r\n      const startDay = startDate.day.value, lastDay = endDate.day.value;\r\n      let currentYear = startYear;\r\n      let month: Month;\r\n      while(currentYear <= endYear){\r\n        month = constMonths[0];\r\n        if(currentYear === endYear){\r\n          month.year = { value: currentYear };\r\n          years.push({\r\n            value: currentYear,\r\n            months: this.getMonths(month , constMonths[lastMonth-1], undefined, lastDay)\r\n          });\r\n        } else {\r\n          if(currentYear === startYear){\r\n            month = constMonths[startMonth-1];\r\n            month.year = { value: currentYear };\r\n            years.push({\r\n              value: currentYear,\r\n              months: this.getMonths(month, undefined , startDay, undefined)\r\n            });\r\n          } else {\r\n            month.year = { value: currentYear };\r\n            years.push({\r\n              value: currentYear,\r\n              months: this.getMonths(month)\r\n            });\r\n          }\r\n        }\r\n        currentYear++;\r\n      }\r\n      return years;\r\n    }\r\n    getMonths(startMonth: Month, endMonth?: Month, startDay?: number, endDay?: number): Month[] {\r\n      let months: Month[] = [];\r\n      let __startMonth = startMonth.value, __endMonth = 12, __year = 2000;\r\n      let __startDay = 1, __endDay = constMonths[11].numdays;\r\n      if(typeof endMonth !== \"undefined\"){\r\n        __endMonth = endMonth.value;\r\n      }\r\n      if(typeof startMonth.year !== \"undefined\"){\r\n        __year = startMonth.year.value;\r\n      }\r\n      let currentMonth = __startMonth;\r\n      let days: Day[] = [];\r\n      let weeks: Week[] = [];\r\n      while(currentMonth <= __endMonth){\r\n        const temporal = constMonths[currentMonth-1];\r\n        let month: Month = { value: 0, numdays: 0 };\r\n        month.name = temporal.name;\r\n        month.value = temporal.value;\r\n        month.numdays += temporal.numdays;\r\n        month.year = { value: __year };\r\n\r\n        if(month.value === constMonths[1].value && MDate.isLeapYear(__year)){\r\n          month.numdays++;\r\n        }\r\n        if(currentMonth === __startMonth && typeof startDay !== \"undefined\"){\r\n          __startDay = startDay;\r\n          __endDay = month.numdays;\r\n        }else if(currentMonth === __endMonth && typeof endDay !== \"undefined\"){\r\n          __startDay = 1;\r\n          __endDay = endDay;\r\n        } else {\r\n          __startDay = 1;\r\n          __endDay = month.numdays;\r\n        }\r\n        days = this.getDays(month, __startDay, __endDay);\r\n        weeks = this.getWeeksForCalendar(days);\r\n        // weeks = this.getWeeks(days);\r\n        months.push({\r\n          value: currentMonth,\r\n          numdays: month.numdays,\r\n          days: days,\r\n          weeks: weeks,\r\n          name: constMonths[currentMonth-1].name,\r\n          year: month.year\r\n        });\r\n        currentMonth++;\r\n      }\r\n      return months;\r\n    }\r\n    getWeeks(days: Day[]): Week[] {\r\n      let weeks: Week[] = [], daysOfWeek: Day[] = [];\r\n      let weekNum = 1; let lastDay: Day;\r\n      if(typeof days !== \"undefined\"){\r\n        lastDay = days[days.length -1];\r\n        for (const day of days) {\r\n          daysOfWeek.push(day);\r\n          if(day.name == \"sábado\" || day === lastDay){\r\n            weeks.push({\r\n              value: weekNum,\r\n              days: daysOfWeek\r\n            })\r\n            weekNum++;\r\n            daysOfWeek = [];\r\n          }\r\n        }\r\n      }\r\n      return weeks;\r\n    }\r\n    getDays(month: Month, startDay: number, endDay: number): Day[] {\r\n      let days: Day[] = [];\r\n      let mon: Month = { value: 0, numdays: 0 };\r\n      mon.value = month.value;\r\n      mon.numdays = month.numdays;\r\n      mon.name = month.name;\r\n      mon.year = month.year;\r\n      let currentDay = startDay;\r\n      let year = (typeof month.year !== \"undefined\") ? month.year.value : 2000;\r\n      let name: string;\r\n      while(currentDay <= endDay){\r\n        name = Calendar.getDayName(currentDay, month.value, year)!;\r\n        days.push({\r\n          value: currentDay,\r\n          month: mon,\r\n          year: month.year,\r\n          name: name,\r\n          abbr: (typeof name === \"string\") ? name.substring(0, 3) : undefined,\r\n          color: '',\r\n          fontcolor: 'black',\r\n          events: []\r\n        });\r\n        //color : '-moz-linear-gradient(left, black, grey 30%, green 30%, white)'\r\n        currentDay++;\r\n      }\r\n      return days;\r\n    }\r\n    /**\r\n     * Get the days of the month and completes it until there's a complete sheet of calendar\r\n     * @param days the days to map\r\n     */\r\n    getWeeksForCalendar(days: Day[]): Week[] {\r\n      let weeks: Week[] = [], daysOfWeek: Day[] = [];\r\n      let weekNum = 1;\r\n      let startDay: Day, lastDay: Day;\r\n      if(typeof days !== \"undefined\"){\r\n        startDay = days[0];\r\n        lastDay = days[days.length -1];\r\n        if(startDay.name != constDays[0].name){\r\n          for (const day of constDays) {\r\n            if(day.name == startDay.name){\r\n              break;\r\n            }\r\n            daysOfWeek.push({\r\n              value: 0,\r\n              name: day.name\r\n            });\r\n          }\r\n        }\r\n        for (const day of days) {\r\n          daysOfWeek.push(day);\r\n          if(day.name == \"sábado\"){\r\n            weeks.push({\r\n              value: weekNum,\r\n              days: daysOfWeek\r\n            })\r\n            if(day != lastDay ) weekNum++;\r\n            daysOfWeek = [];\r\n          }\r\n        }\r\n        if(lastDay.name != constDays[constDays.length-1].name){\r\n          for(let i = constDays.map(e => e.name).indexOf(lastDay.name!) + 1; i < constDays.length; i++){\r\n            daysOfWeek.push({\r\n              value: 0,\r\n              name: constDays[i].name\r\n            });\r\n          }\r\n          weeks.push({\r\n            value: weekNum,\r\n            days: daysOfWeek\r\n          })\r\n        }\r\n        if(weekNum<6){\r\n          weekNum++;\r\n          daysOfWeek = [];\r\n          for (const day of constDays) {\r\n            daysOfWeek.push({\r\n              value: 0,\r\n              name: day.name\r\n            });\r\n          }\r\n          weeks.push({\r\n            value: weekNum,\r\n            days: daysOfWeek\r\n          });\r\n        }\r\n      }\r\n      return weeks;\r\n    }\r\n    /**\r\n     * Applies the Zeller's rule to calculate the name of an speciefied Date\r\n     * @see http://mathforum.org/dr.math/faq/faq.calendar.html the section of \"Zeller's Rule\"\r\n     * @param {number} day The day in number format\r\n     * @param {number} month The month in number format\r\n     * @param {number} year The year in number format\r\n     */\r\n    static getDayName(day: number, month: number, year: number): string | undefined {\r\n      let k = day, m = constMonths[month-1].zellerVal;\r\n      let yearText = year.toString();\r\n      let C = parseInt(yearText.substring(0,2));\r\n      let d = parseInt(yearText.substring(2));\r\n      let D = (m>=11) ? (d-1) : d;\r\n      let f = k + Math.floor((13*m-1)/5) + D + Math.floor(D/4) + Math.floor(C/4) - 2*C;\r\n      let numDay = 0;\r\n      if(f < 0){\r\n        f *= -1;\r\n        let mult = 7;\r\n        while(f > mult){\r\n          mult += 7;\r\n        }\r\n        numDay = mult - f;\r\n      } else {\r\n        numDay = f%7;\r\n      }\r\n      let response = constDays[numDay].name;\r\n      return response;\r\n    }\r\n    searchMonth(month: string | undefined, year: number): Month {\r\n      let mon: Month = { value: 0, numdays: 0 };\r\n      if(typeof this.period.years !== \"undefined\"){\r\n        for (const cYear of this.period.years) {\r\n          if(cYear.value === year && typeof cYear.months !== \"undefined\"){\r\n            for (const cMonths of cYear.months) {\r\n              if(cMonths.name === month){\r\n                mon.value = cMonths.value;\r\n                mon.numdays = cMonths.numdays;\r\n                mon.days = cMonths.days;\r\n                mon.name = cMonths.name;\r\n                mon.year = cMonths.year;\r\n                mon.weeks = cMonths.weeks;\r\n                break;\r\n              }\r\n            }\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return mon;\r\n    }\r\n    getTableHTML(month: number, year: number): string {\r\n      let monNode: Month = this.searchMonth(constMonths[month-1].name, year);\r\n      let monYear = (typeof monNode.year !== \"undefined\") ? monNode.year.value.toString(): \"\";\r\n      let yearText = capitalize(monNode.name)+' '+monYear;\r\n      // let id = `${monNode.name!.substring(0,3)+monYear}`;\r\n      let HTMLText: string =\r\n      `<table onclick=\"toggleView(this)\" data-year=\"${monYear}\" data-month=\"${monNode.name!}\">\r\n        <tbody>\r\n          <tr><th colspan=\"7\">${yearText}</th></tr>\r\n          <tr class=\"dweek\">\r\n            <td>D</td>\r\n            <td>L</td>\r\n            <td>M</td>\r\n            <td>M</td>\r\n            <td>J</td>\r\n            <td>V</td>\r\n            <td>S</td>\r\n          </tr>\r\n          ${this.drawWeeksGrid(monNode.weeks!)}\r\n        </tbody>\r\n      </table>`;\r\n      return HTMLText;\r\n    }\r\n    drawWeeksGrid(weeks: Week[] ): string {\r\n      let response = ''; let isLastWeek = false, lastWeek = weeks[weeks.length-1].value, hasSixWeeks = (lastWeek <= 5) ? false : true;\r\n      if(typeof weeks !== \"undefined\"){\r\n        for (const week of weeks) {\r\n          if(week.value === lastWeek){ isLastWeek = true; }\r\n          response +=\r\n          `<tr class=\"week\">\r\n            ${this.drawDaysGrid(week.days!, isLastWeek)}\r\n          </tr>\\n`;\r\n        }\r\n        if(!hasSixWeeks){\r\n          let currentDay = 0;\r\n          response += `<tr class=\"week\">`;\r\n          while(currentDay <= constDays.map(e => e.name).indexOf(\"sábado\")){\r\n            response += `<td></td>\\n`;\r\n            currentDay++;\r\n          }\r\n          response +=`</tr>\\n`;\r\n        }\r\n      }\r\n      return response;\r\n    }\r\n    drawDaysGrid(days: Day[], isLastWeek: boolean): string {\r\n      let response = '';\r\n      let lastDay = days[days.length-1].name;\r\n      for (const day of constDays) {\r\n        if(day.name === days[0].name){\r\n          break;\r\n        }\r\n        response += `<td></td>\\n`;\r\n      }\r\n      for (const day of days) {\r\n        response +=\r\n        `<td id=\"${day.value}_${day.month!.value}_${day.year!.value}\">${day.value}</td>\\n`;\r\n      }\r\n      if(isLastWeek && lastDay !== constDays[6].name){\r\n        let currentDay = constDays.map(e => e.name).indexOf(lastDay!);\r\n        while(currentDay !== constDays.map(e => e.name).indexOf(\"sábado\")){\r\n          response += `<td></td>\\n`;\r\n          currentDay++;\r\n        }\r\n      }\r\n      return response;\r\n    }\r\n    getAllMonthsHTML(months: Month[]): string {\r\n      let text = '';\r\n      for (const month of months) {\r\n        text +=\r\n        `<div class=\"month\" id=\"${month.name!.substring(0,3)+month.year!.value}\">`\r\n          + this.getTableHTML(month.value, month.year!.value)\r\n        +'</div>\\n';\r\n      }\r\n      return text;\r\n    }\r\n    /**\r\n     * Compares two dates, and returns numbers depending if `anotherDate` is lower, same of higher than `date`\r\n     * @param date The first date\r\n     * @param anotherDate The date to be compared\r\n     * @returns {number} `0` if they're the same, `1` if `date` is higher, and `-1` if `date` is lower.\r\n     */\r\n    compareDates(date: MDate, anotherDate: MDate): number {\r\n      let response: number = 0;\r\n      let fdate = new Date(\r\n        date.year.value,\r\n        date.month.value,\r\n        date.day.value\r\n      );\r\n      fdate.setHours(0,0,0,0);\r\n      let sdate = new Date(\r\n        anotherDate.year.value,\r\n        anotherDate.month.value,\r\n        anotherDate.day.value\r\n      );\r\n      sdate.setHours(0,0,0,0);\r\n      let first = fdate.getTime();\r\n      let second = sdate.getTime();\r\n      if(first === second){\r\n        response = 0;\r\n      } else if(first > second){\r\n        response = 1;\r\n      } else {\r\n        response = -1;\r\n      }\r\n      console.log(first, second, response);\r\n      return response;\r\n    }\r\n    /**\r\n     * This gets the events and assigns them to the calendar, and it normalizes the date that comes as string.\r\n     * We receive a string date of the format `yyyy-MM-dd`\r\n     * @param events\r\n     */\r\n    setEvents(events: Event[] = []) {\r\n      let nomEvents: Event[] =  [];\r\n      events.forEach(event => {\r\n        if(typeof event.startDate === \"string\" && typeof event.endDate === \"string\"){\r\n          /// sdA & edA stands for startDateArray and end... the same.\r\n          let sdA = event.startDate.split('-').map(n => parseInt(n));\r\n          let edA = event.endDate.split('-').map(n => parseInt(n));\r\n          //var[0] = YEAR, var[1] = MONTH, var[2] = DAY\r\n          nomEvents.push({\r\n            id: event.id,\r\n            name: event.name,\r\n            typeId: event.typeId,\r\n            startDate: new MDate(sdA[2], sdA[1], sdA[0]),\r\n            endDate: new MDate(edA[2], edA[1], edA[0]),\r\n            status: event.status\r\n          })\r\n        }\r\n      });\r\n      this.events = nomEvents;\r\n      // this.events = events;\r\n    }\r\n    setEventsType(eventTypes: EventType[]){\r\n      this.eventTypes = eventTypes;\r\n    }\r\n    populateDayWEvents(){\r\n      let el = this;\r\n      el.restoreDayEvents();\r\n      el.events.forEach(event => {\r\n        const start = (event.startDate as MDate).year.value;\r\n        const end = (event.endDate as MDate).year.value;\r\n        el.period.years.filter(year => year.value >= start && year.value <= end)\r\n        .forEach(year => year.months.forEach(month => {\r\n          let changesOnMonth: number = 0;\r\n          for (const day of month.days) {\r\n            const time = new Date(year.value, month.value - 1, day.value).getTime();\r\n            if(time >= (event.startDate as MDate).time && time <= (event.endDate as MDate).time){\r\n              day.events.push(event);\r\n              changesOnMonth++;\r\n            }\r\n          }\r\n          if(changesOnMonth > 0)\r\n            el.updateWeeksForSheet(month);\r\n        }));\r\n      });\r\n    }\r\n    updateWeeksForSheet(month: Month){\r\n      for (const day of month.days) {\r\n        let ignore = day.name == \"sábado\" || day.name == \"domingo\" ? true : false;\r\n        if(!ignore){\r\n          const evLength = day.events.length;\r\n          if(evLength == 0 && day.color != '') {\r\n            day.color = '';\r\n            day.fontcolor = \"black\";\r\n          }else if(evLength == 1) {\r\n            const evType = this.eventTypes.find(et => et.id == day.events[0].typeId);\r\n            if(evType != undefined){\r\n              day.color = evType.color;\r\n              day.fontcolor = lightOrDark(evType.color) == \"light\" ? \"black\" : \"white\";\r\n            }\r\n            else {\r\n              console.log(this.eventTypes, this.events);\r\n            }\r\n          }else if(evLength >= 2) {\r\n            const evType1 = this.eventTypes.find(et => et.id == day.events[0].typeId);\r\n            const evType2 = this.eventTypes.find(et => et.id == day.events[1].typeId);\r\n            if(evType1 != undefined && evType2 != undefined){\r\n              day.color = getTwoGradientString(evType1.color, evType2.color);\r\n              day.fontcolor = lightOrDark(evType1.color) == \"light\" ? \"black\" : \"white\";\r\n            }\r\n            else {\r\n              console.log(this.eventTypes, this.events);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      let weeks: Week[] = this.getWeeksForCalendar(month.days);\r\n      month.weeks = weeks;\r\n    }\r\n    restoreDayEvents(){\r\n      let el = this;\r\n      el.events.forEach(event => {\r\n        const start = (event.startDate as MDate).year.value;\r\n        const end = (event.endDate as MDate).year.value;\r\n        el.period.years.filter(year => year.value >= start && year.value <= end)\r\n        .forEach(year => year.months.forEach(month => {\r\n          let changesOnMonth: number = 0;\r\n          for (const day of month.days) {\r\n            const time = new Date(year.value, month.value - 1, day.value).getTime();\r\n            if(time >= (event.startDate as MDate).time && time <= (event.endDate as MDate).time){\r\n              day.events = [];\r\n              changesOnMonth++;\r\n            }\r\n          }\r\n          if(changesOnMonth > 0)\r\n            el.updateWeeksForSheet(month);\r\n        }));\r\n      });\r\n    }\r\n  }\r\n\r\n  function getTwoGradientString(fColor: string, sColor: string) {\r\n    let gradient: string;\r\n    gradient = `-webkit-linear-gradient(90deg, ${fColor} 50%, ${sColor} 50%); ` /* For Chrome 25 and Safari 6, iOS 6.1, Android 4.3 */\r\n    gradient += `-moz-linear-gradient(90deg, ${fColor} 50%, ${sColor} 50%); ` /* For Firefox (3.6 to 15) */\r\n    gradient += `-o-linear-gradient(90deg, ${fColor} 50%, ${sColor} 50%); ` /* For old Opera (11.1 to 12.0) */\r\n    gradient += `linear-gradient(90deg, ${fColor} 50%, ${sColor} 50%);` /* Standard syntax; must be last */\r\n    return gradient;\r\n  }\r\n\r\n  /**\r\n   * Get a color and determines if it's a dark o light color\r\n   * @param color The color to evaluate\r\n   * @returns A string with a string `dark|light` depending of the color brightness\r\n   */\r\n  function lightOrDark(color: string): string {\r\n\r\n    let temporal: number | any[] | RegExpMatchArray;\r\n    let r: number, g: number, b: number, hsp: number;\r\n\r\n    // Check the format of the color, HEX or RGB?\r\n    if (color.match(/^rgb/)) {\r\n\r\n      // If HEX --> store the red, green, blue values in separate variables\r\n      temporal = color.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/);\r\n\r\n      r = temporal[1];\r\n      g = temporal[2];\r\n      b = temporal[3];\r\n    }\r\n    else {\r\n\r\n      // If RGB --> Convert it to HEX: http://gist.github.com/983661\r\n      temporal = +(\"0x\" + color.slice(1).replace(\r\n      color.length < 5 && /./g, '$&$&'));\r\n\r\n      r = temporal >> 16;\r\n      g = temporal >> 8 & 255;\r\n      b = temporal & 255;\r\n    }\r\n\r\n    // HSP (Highly Sensitive Poo) equation from http://alienryderflex.com/hsp.html\r\n    hsp = Math.sqrt(\r\n      0.299 * (r * r) +\r\n      0.587 * (g * g) +\r\n      0.114 * (b * b)\r\n    );\r\n\r\n    // Using the HSP value, determine whether the color is light or dark\r\n    if (hsp>127.5) {\r\n\r\n      return 'light';\r\n    }\r\n    else {\r\n\r\n      return 'dark';\r\n    }\r\n  }\r\n\r\n  const enum Tasks {\r\n    CREATE_OFFICIAL_EVENTS = 1,\r\n    CREATE_EVENT_TYPES     = 2,\r\n    EDIT_EVENT_TYPES       = 3,\r\n    DELETE_EVENT_TYPES     = 4,\r\n    EDIT_EVENTS            = 5,\r\n    DELETE_EVENTS          = 6,\r\n    APPROVE_EVENTS         = 7,\r\n    DISAPPROVE_EVENTS      = 8,\r\n    PUBLISH                = 9\r\n  }\r\n\r\n  export interface User {\r\n    id: number;\r\n    name: string;\r\n    username: string;\r\n    email: string;\r\n    role: Role;\r\n  }\r\n\r\n  export interface Role {\r\n    id: number;\r\n    name: string;\r\n    tasks: Task[];\r\n  }\r\n\r\n  export interface Task {\r\n    id: number;\r\n    description: string;\r\n  }\r\n\r\n  export class User {\r\n\r\n    private user: User;\r\n\r\n    constructor(user: User) {\r\n      this.user = user;\r\n    }\r\n\r\n    setUser(user: User) {\r\n      this.user = user;\r\n    }\r\n\r\n    canCreateOfficialEvents(): boolean {\r\n      return this.user.role.tasks.map(task => task.id).includes(Tasks.CREATE_OFFICIAL_EVENTS);\r\n    }\r\n    canCreateEventTypes(): boolean {\r\n      return this.user.role.tasks.map(task => task.id).includes(Tasks.CREATE_EVENT_TYPES);\r\n    }\r\n    canEditEventTypes(): boolean {\r\n      return this.user.role.tasks.map(task => task.id).includes(Tasks.EDIT_EVENT_TYPES);\r\n    }\r\n    canDeleteEventTypes(): boolean {\r\n      return this.user.role.tasks.map(task => task.id).includes(Tasks.DELETE_EVENT_TYPES);\r\n    }\r\n    canEditEvents(): boolean {\r\n      return this.user.role.tasks.map(task => task.id).includes(Tasks.EDIT_EVENTS);\r\n    }\r\n    canDeleteEvents(): boolean {\r\n      return this.user.role.tasks.map(task => task.id).includes(Tasks.DELETE_EVENTS);\r\n    }\r\n    canApproveEvents(): boolean {\r\n      return this.user.role.tasks.map(task => task.id).includes(Tasks.APPROVE_EVENTS);\r\n    }\r\n    canDisapproveEvents(): boolean {\r\n      return this.user.role.tasks.map(task => task.id).includes(Tasks.DISAPPROVE_EVENTS);\r\n    }\r\n    canPublish(): boolean {\r\n      return this.user.role.tasks.map(task => task.id).includes(Tasks.PUBLISH);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport = ITESCAM\r\n"]}